#cloud-config
autoinstall:
  version: 1
  identity:
    hostname: rob-robot-000
    realname: Robotnik Automation S.L.
    username: robot
    password: $6$Z2ZFK3VplTxBlX2w$blmQ9Um05Z0FG8AfqH1A/C3fPSVR7C.2X1ev9IcTj.SIICC0zwdRBY2nZTYp.DK/i9wuaXEq4wspJTNkgAeBP0
  refresh-installer:
  update: yes
  locale: en_US
  keyboard:
    layout: es
    # variant: es
  source:
    id: "ubuntu-server"
  ssh:
    install-server: yes
    authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCtkQFf7sa+G1oAGkPC2fMR+qOqcE651SToEyVbR6aDFR9kYLSFLvzUA1W+hjDsI1uL5SuOQju1kDDDnNO0SjQOsffqw44L3D9CXqNPIAGs+6lBffDGd9A6e5yLpOuaXM5t9dMBq2SWV2Frq8gu0CR3NyHtFCzu87ghlKzaelaGWdIeyR+2HqtQr3t+ykCF5u0/+MLGWEHISpl+aV17+lvRB8qRNE0hZm7lSWTgJ2gRFVIGy69tsUCYf9+0KJDkM3sfvxzM2HyKNN60gkGDTH0BA4/ZTzqs8qbCylD1Jhgl+0ZNaIg6OkhyFBzESxrQpQkexOTtygtpv6YJM2liZTV7
    allow-pw: yes
  updates: all
  apt:
    mirror-selection:
      primary:
        - uri: http://archive.ubuntu.com/ubuntu
    sources:
      docker.list:
        source: >
          deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      ros.list:
        source: >
          deb [arch=amd64] http://packages.ros.org/ros/ubuntu focal main
        keyid: C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
      # anydesk.list:
      #   source: >
      #     deb [arch=amd64] http://deb.anydesk.com/ all main
      #   keyid: D56311E5FF3B6F39D5A16ABE18DF3741CDFFDE29
      chrome.list:
        source: >
          deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
        keyid: EB4C1BFD4F042F6DDDCCEC917721F63BD38B4796
  network:
    network:
      version: 2
      # renderer: NetworkManager
      ethernets:
        eth0:
          dhcp4: yes
          optional: yes
        eth1:
          dhcp4: yes
          optional: true
  storage:
    layout:
      name: lvm
      match:
        ssd: yes
      sizing-policy: all
  snaps:
    - name: code
      channel: stable
      classic: true
    - name: remmina
      channel: stable
      classic: false
  packages:
    # - anydesk
    - chromium-browser
    - google-chrome-stable
    - gnupg2
    - apt-transport-https
    - jq
    - powerline
    - fonts-powerline
    # - fzf
    - ack-grep
    - net-tools
    - containerd.io
    - docker-ce
    - docker-ce-cli
    - docker-compose-plugin
    - ubuntu-desktop-minimal
    - screen
    - python3-rosdep
    - python3-rosinstall
    - python3-rosinstall-generator
    - build-essential
    - python3-wstool
    - ros-noetic-desktop-full
    - ros-noetic-transmission-interface
    - ros-noetic-effort-controllers
    - ros-noetic-joint-state-controller
    - ros-noetic-navigation
    - ros-noetic-ros-control
    - ros-noetic-ros-controllers
    - ros-noetic-velocity-controllers
    - ros-noetic-control-toolbox
    - ros-noetic-cmake-modules
    - ros-noetic-serial
    # - ros-noetic-joystick-drivers
    - ros-noetic-rosbridge-server
    - ros-noetic-robot-localization
    - ros-noetic-twist-mux
    - ros-noetic-imu-tools
    - ros-noetic-mavros-*
    - ros-noetic-teb-local-planner
    - ros-noetic-ackermann*
    - ros-noetic-rosbridge-suite
    - ros-noetic-urg-node
    # - ros-noetic-ar-track-alvar*
    - ros-noetic-move-base
    - ros-noetic-amcl
    - ros-noetic-libuvc-camera
    - ros-noetic-realsense2-camera
    - ros-noetic-rqt-joint-trajectory-controller
    - ros-noetic-psen-scan*
    - openssh-server
    - vim
    - subversion
    - git
    - apache2
    - mingetty
    - libpopt-dev
    - sysstat
    - ifstat
    - ntpdate
    - terminator
    - screen
    - libpcap-dev
    - socat
    - ffmpeg
    - python-is-python3
    - python3-pip
    - python3-catkin-tools
    - python3-bloom
    - arp-scan
    - libmodbus*
    - net-tools
    - meld
    - libmysql++3v5
    - libmysql++-dev
  late-commands:
    - >
      wget
      https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
      -O yq
    - chmod +x yq
    - mv yq /target/usr/local/bin/yq
    - >
      wget
      https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh
      -O /target/root/install_geographiclib_datasets.sh
    - chmod +x /target/root/install_geographiclib_datasets.sh
    - >
      wget
      http://www.peak-system.com/fileadmin/media/linux/files/peak-linux-driver-8.16.0.tar.gz
      -O /target/root/peak-linux-driver-8.16.0.tar.gz
    - >
      cd /target/root &&
      tar -xzf peak-linux-driver-8.16.0.tar.gz
  user-data:
    write_files:
      # - path: /etc/modules-load.d/k8s.conf
      #   permissions: '0644'
      #   content: |
      #     overlay
      #     br_netfilter
      - path: /etc/udev/rules.d/46-pcan.rules
        permissions: '0644'
        content: |
          # # Single unit
          KERNEL=="pcanusb*", SYMLINK+="pcan_base", MODE="0666"
          # # Mutliple units
          # KERNEL=="pcanusb*", ATTRS{devid}=="40",SYMLINK+="pcan_traction", MODE="0666"
          # KERNEL=="pcanusb*", ATTRS{devid}=="30",SYMLINK+="pcan_steer", MODE="0666"
      - path: /etc/udev/rules.d/37-bluetooth-hci.rules
        permissions: '0644'
        content: |
          # SUBSYSTEM=="usb", ATTRS{idVendor}=="your-vendor-id-here", ATTRS{idProduct}=="your-product-id-here", ATTR{authorized}="0"

      - path: /etc/udev/rules.d/50-imu.rules
        permissions: '0644'
        content: |
          # KERNEL=="ttyUSB[0-9]*", ATTRS{idProduct}=="6001", ATTRS{serial}=="FT91CQPY", NAME="%k", SYMLINK="ttyUSB_IMU", GROUP="dialout", MODE="0666"
      - path: /etc/udev/rules.d/51-imu.rules
        permissions: '0644'
        content: |
          # KERNEL=="ttyUSB[0-9]*", ATTRS{idProduct}=="6001", ATTRS{serial}=="FT91CQPY", NAME="%k", SYMLINK="ttyUSB_IMU", GROUP="dialout", MODE="0666"
          # KERNEL=="ttyACM[0-9]*", ATTRS{idProduct}=="5740", NAME="%k", SYMLINK="ttyUSB_IMU", GROUP="dialout", MODE="0666"
      - path: /etc/udev/rules.d/53-gps.rules
        permissions: '0644'
        content: |
          KERNEL=="ttyACM[0-9]*", ATTRS{idVendor}=="1546", ATTRS{idProduct}=="01a9", NAME="%k", SYMLINK="ttyUSB_GPS", GROUP=$
      - path: /etc/udev/55-dualsense.rules
        permissions: '0644'
        content: |
          KERNEL=="js[0-9]*", SUBSYSTEM=="input", ATTRS{name}=="Wireless Controller", SYMLINK+="input/js_base"
      - path: /etc/apt/apt.conf.d/20auto-upgrades
        permissions: '0644'
        content: |
          APT::Periodic::Update-Package-Lists "0";
          APT::Periodic::Download-Upgradeable-Packages "0";
          APT::Periodic::AutocleanInterval "0";
          APT::Periodic::Unattended-Upgrade "0";
      - path: /etc/gdm3/custom.conf
        permissions: '0644'
        content: |
          # GDM configuration storage
          #
          # See /usr/share/gdm/gdm.schemas for a list of available options.

          [daemon]
          # Uncomment the line below to force the login screen to use Xorg
          WaylandEnable=false

          # Enabling automatic login
          AutomaticLoginEnable = true
          AutomaticLogin = robot

          # Enabling timed login
          TimedLoginEnable = true
          TimedLogin = robot
          TimedLoginDelay = 0

          [security]

          [xdmcp]

          [chooser]

          [debug]
          # Uncomment the line below to turn on debugging
          # More verbose logs
          # Additionally lets the X server dump core if it crashes
          #Enable=true
      - path: /root/screenrc
        permissions: '0644'
        content: |
          termcapinfo xterm* ti@:te@
          shell -$SHELL
          setenv LD_LIBRARY_PATH echo $CMAKE_PREFIX_PATH | awk '{split($1, a, ":"); print a[1];}'"/lib":/opt/ros/melodic/lib:/opt/ros/melodic/lib/x86_64-linux-gnu
          zombie kr
          verbose on
    runcmd:
      - systemctl stop containerd
      - mkdir -p /etc/containerd
      - touch /etc/containerd/config.toml
      - containerd config default > /etc/containerd/config.toml
      - >
        sed -i
        's/SystemdCgroup = false/SystemdCgroup = true/'
        /etc/containerd/config.toml
      - systemctl start containerd
      - systemctl enable containerd
      - groupadd docker
      - usermod -aG docker robot
      - usermod -aG dialout robot
      - usermod -aG root robot
      - >
        sed -E -i
        's#quiet splash##;s#(GRUB_CMDLINE_LINUX_DEFAULT=.*) "#\1"#'
        /etc/default/grub
      - >
        sed -E -i
        's#(GRUB_CMDLINE_LINUX_DEFAULT=)(".*)"#\1\2 quiet splash"#'
        /etc/default/grub
      - update-grub
      - >
        cd /root/peak-linux-driver-8.16.0 &&
        make clean &&
        make NET=NO_NETDEV_SUPPORT &&
        make install
      - /root/install_geographiclib_datasets.sh
      - >
        git clone https://github.com/tomojitakasu/RTKLIB.git /opt/RTKLIB
      - >
        cd /opt/RTKLIB/app &&
        chmod +x makeall.sh &&
        ./makeall.sh
      - >
        git clone
        https://github.com/nimbuscontrols/EIPScanner
        /root/EIPScanner &&
        cd /root/EIPScanner &&
        git checkout 1.3.0 &&
        mkdir build &&
        cd build &&
        cmake ..
      - >
        cd /root/EIPScanner/build &&
        cmake --build . --target install &&
        cd .. &&
        rm -rf EIPScanner
      - mv /root/screenrc /home/robot/.screenrc
      - chown robot:robot /home/robot/.screenrc
      - >
        sudo -u robot
        git clone --depth 1
        https://github.com/junegunn/fzf.git
        /home/robot/.fzf
      - sudo -u robot /home/robot/.fzf/install --all
      - >
        sudo -u robot
        echo
        'export ROS_MASTER_URI="http://$(hostname):11311"'
        >>/home/robot/.bashrc
      - >
        sudo -u robot
        echo
        "source /opt/ros/noetic/setup.bash"
        >>/home/robot/.bashrc
      - >
        sudo -u robot
        echo
        "source /usr/share/powerline/bindings/bash/powerline.sh"
        >>/home/robot/.bashrc
      - >
        sudo -u robot
        gsettings set org.gnome.desktop.interface enable-animations false
      - reboot
